from Crypto.Util.number import getPrime, bytes_to_long
from os import system

p = getPrime(1024)
q = getPrime(1024)
r = getPrime(1024)

e = 65537
n = 18279475293674873921575617866111957385096993553174442423644949507844449945793815806051562008812653903737384897009721879167774812130840648039933638939230208110095000371256532056185684614057780669512193896027260110548896016947169979562442035156124553667315184987116406509988957697310262603969641826780527456851647556776027389341996675860222424269118725924118156266069939249047339157109373016576772496148985585530831551451385143166761178331577684535076658315469645611688863346629224183926119720189155137030267651163217568552377991918518886604287686874929985674422036144675063412172323765592356529964054415473296230079539
qXr = 10835766408878144435437319919274957256588201780972062938259876265195992763072694102013587889482344177765993913414931799826347784404485823358711739431746786505339784647568552623689932869586241621617224302676059875202154487444593241022734414037894791580035472375276960984758413034933127322103793158280694604203874493449302658192532870670024211288817072500812545829759165679455930155774425203328199765972028767833685527008346610070441896814380773825035965335035063912464445650255211382897654621591301058121796793368457749189784218494469631761255439861904187245379087162369702704017884639993786814570748338738118316103487

cipher_flag = 16232644392310392288923887051020016096962521497647611410351875894652428122154246709646197206780408102955976483477784409640930783456248070437400036040378092684658276454415071617092280934640464236075052726459209346125638349488539246572688718015392582540309615104826510909679325654137897067626445765678586423703937933190729497210250345837636447478426753454088307311230203810940501566672937780263534919703011236096728713818333255292236830137633054535785404812024595077281980898883980555384196552570691327378787822372675666373121301107160861518846708543000398457326900628011123311516495380546408534365861583087709650924490

system("python RsaCtfTool/RsaCtfTool.py " + "-e " + str(e) + " -n " + str(n) + " --uncipher " + str(cipher_flag))

# n = p * q

# q = 108... / r[getPrime(1024)]
# p = n / q

